1:"$Sreact.fragment"
8:I[8393,[],""]
:HL["/_next/static/css/3ca3d2f2e38ad017.css","style"]
2:T1313,
            :root{--primary-teal:#2DD4BF;--primary-teal-text:#0D9488;--text-dark:#1F2937;--text-light:#6B7280;--background:#FFFFFF;--surface:#F9FAFB}
            .dark{--text-dark:#F1F5F9;--text-light:#94A3B8;--background:#0F172A;--surface:#1E293B}
            @font-face{font-family:'Inter';src:url('/fonts/inter-latin.woff2') format('woff2');font-weight:100 900;font-style:normal;font-display:swap;unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}
            *{box-sizing:border-box}
            html{scroll-behavior:smooth;font-size:16px;margin:0;padding:0;border:none;outline:none}
            body{background:var(--background);color:var(--text-dark);font-family:'Inter',-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell',sans-serif;line-height:1.6;margin:0;padding:0;border:none;outline:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}
            nav{border:none !important;outline:none !important}
            h1,h2,h3,h4,h5,h6{font-family:'Hoss Round','Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',sans-serif}
            p,span{max-width:75ch;line-height:1.7}
            .text-content div{max-width:75ch;line-height:1.7}
            .text-content{max-width:65ch}
            @media (max-width:640px){
              h1{font-size:1.75rem;line-height:1.2}
              h2{font-size:1.25rem;line-height:1.3}
              h3{font-size:1.1rem;line-height:1.4}
              h4{font-size:1rem;line-height:1.4}
            }
            @media (min-width:641px) and (max-width:768px){
              h1{font-size:2rem;line-height:1.2}
              h2{font-size:1.5rem;line-height:1.3}
              h3{font-size:1.25rem;line-height:1.4}
            }
            @media (prefers-reduced-motion: reduce){
              *{animation-duration:0.01ms !important;animation-iteration-count:1 !important;transition-duration:0.01ms !important}
            }
            a:hover{color:#0D9488;transition:color 0.2s ease}
            .hover-lift:hover{transform:translateY(-2px);transition:transform 0.2s ease}
            button:focus,a:focus{outline:2px solid #2DD4BF;outline-offset:2px;border-radius:4px}
            .skip-to-content{position:absolute;top:-100px;left:0;z-index:999;padding:8px 16px;background:#1F2937;color:white;text-decoration:none;border-radius:0 0 4px 0;transition:top 0.3s}
            .skip-to-content:focus{top:0;outline:2px solid #2DD4BF;outline-offset:2px}
            .section-spacing{margin-bottom:4rem}
            .component-spacing{margin-bottom:1.5rem}
            .micro-spacing{margin-bottom:0.5rem}
            @media (min-width:768px){
              .section-spacing{margin-bottom:6rem}
              .component-spacing{margin-bottom:2rem}
            }
            .site-container{width:100%;max-width:1200px;margin-left:auto;margin-right:auto;padding-left:1rem;padding-right:1rem}
            @media (min-width:640px){.site-container{padding-left:1.5rem;padding-right:1.5rem}}
            @media (min-width:768px){.site-container{padding-left:2rem;padding-right:2rem}}
            @media (min-width:1024px){.site-container{max-width:1200px}}
            @media (min-width:1200px){.site-container{max-width:1200px}}
            .section-padding{padding-top:4rem;padding-bottom:4rem}
            @media (min-width:768px){.section-padding{padding-top:5rem;padding-bottom:5rem}}
            .mx-auto{margin-left:auto;margin-right:auto}
            .max-w-4xl{max-width:56rem}
            .pt-16{padding-top:4rem}
            .pb-8{padding-bottom:2rem}
            .px-4{padding-left:1rem;padding-right:1rem}
            .mb-6{margin-bottom:1.5rem}
            .mb-8{margin-bottom:2rem}
            .text-left{text-align:left}
            .text-center{text-align:center}
            .text-primary-teal-text{color:#0F766E}
            .text-text-dark{color:#1F2937}
            .text-text-light{color:#6B7280}
            .font-bold{font-weight:700}
            .text-4xl{font-size:2.25rem;line-height:2.5rem}
            .text-5xl{font-size:3rem;line-height:1}
            .text-6xl{font-size:3.75rem;line-height:1}
            .text-lg{font-size:1.125rem;line-height:1.75rem}
            .text-xl{font-size:1.25rem;line-height:1.75rem}
            .leading-tight{line-height:1.25}
            .leading-relaxed{line-height:1.625}
            .min-h-screen{min-height:100vh}
            @media (min-width:768px){
              .md\:pt-24{padding-top:6rem}
              .md\:pb-12{padding-bottom:3rem}
              .md\:text-5xl{font-size:3rem;line-height:1}
              .md\:text-xl{font-size:1.25rem;line-height:1.75rem}
            }
            @media (min-width:1024px){
              .lg\:text-6xl{font-size:3.75rem;line-height:1}
            }
          0:{"P":null,"b":"jbdTEaxYoLC2lZ2bbpVBz","p":"","c":["","blog","when-your-tests-pass-but-your-app-fails",""],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","when-your-tests-pass-but-your-app-fails","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3ca3d2f2e38ad017.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"font-inter","children":[["$","head",null,{"children":[["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                const theme = localStorage.getItem('theme') ||\n                  (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n                if (theme === 'dark') {\n                  document.documentElement.classList.add('dark');\n                  document.body.classList.add('dark');\n                }\n              })();\n            "}}],["$","link",null,{"rel":"dns-prefetch","href":"//pipermorgan.ai"}],["$","link",null,{"rel":"preconnect","href":"https://pipermorgan.ai"}],["$","link",null,{"rel":"preload","as":"image","href":"/assets/pm-logo.png"}],["$","link",null,{"rel":"preload","href":"/fonts/inter-latin.woff2","as":"font","type":"font/woff2","crossOrigin":"anonymous"}],["$","link",null,{"rel":"preload","href":"/fonts/HossRound-Regular.woff2","as":"font","type":"font/woff2","crossOrigin":"anonymous"}],["$","style",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}]]}],"$L3"]}]]}],{"children":["blog","$L4",{"children":[["slug","when-your-tests-pass-but-your-app-fails","d"],"$L5",{"children":["__PAGE__","$L6",{},null,false]},null,false]},null,false]},null,false],"$L7",false]],"m":"$undefined","G":["$8",[]],"s":false,"S":true}
9:I[9119,["874","static/chunks/874-668c89038fa04eb8.js","212","static/chunks/212-8a7a8f47a4a53f15.js","177","static/chunks/app/layout-9ed54623e803ece8.js"],"ClientLayout"]
a:I[7555,[],""]
b:I[1295,[],""]
c:I[6874,["874","static/chunks/874-668c89038fa04eb8.js","212","static/chunks/212-8a7a8f47a4a53f15.js","144","static/chunks/144-1b443e029a921717.js","674","static/chunks/674-c08277d51cf116dd.js","831","static/chunks/app/blog/page-666765c672eae567.js"],""]
10:I[9665,[],"OutletBoundary"]
12:I[4911,[],"AsyncMetadataOutlet"]
14:I[9665,[],"ViewportBoundary"]
16:I[9665,[],"MetadataBoundary"]
17:"$Sreact.suspense"
3:["$","body",null,{"className":"font-sans antialiased","children":[["$","$L9",null,{"children":["$","$La",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"min-h-screen","children":["$","div",null,{"className":"site-container max-w-4xl pt-16 md:pt-24 pb-8 md:pb-12 text-center","children":[["$","div",null,{"className":"mb-8","children":[["$","h1",null,{"className":"text-8xl md:text-9xl font-bold text-primary-teal-text mb-4","children":"404"}],["$","h2",null,{"className":"text-3xl md:text-4xl font-semibold text-text-dark mb-4","children":"Page Not Found"}],["$","p",null,{"className":"text-xl text-text-light leading-relaxed max-w-2xl mx-auto","children":"Looks like this page got lost in the AI training data. Don't worry ‚Äì even the best algorithms make mistakes sometimes."}]]}],["$","div",null,{"className":"mb-12","children":[["$","h3",null,{"className":"text-xl font-semibold text-text-dark mb-6","children":"Where would you like to go instead?"}],["$","div",null,{"className":"grid md:grid-cols-2 gap-6 max-w-2xl mx-auto","children":[["$","div",null,{"className":"space-y-4","children":[["$","$Lc",null,{"href":"/","className":"block p-4 bg-surface rounded-card hover:bg-gray-50 transition-colors group","children":[["$","h4",null,{"className":"font-semibold text-text-dark group-hover:text-primary-teal-text","children":"üè† Homepage"}],["$","p",null,{"className":"text-sm text-text-light mt-1","children":"Start from the beginning of our AI PM journey"}]]}],["$","$Lc",null,{"href":"/how-it-works","className":"block p-4 bg-surface rounded-card hover:bg-gray-50 transition-colors group","children":[["$","h4",null,{"className":"font-semibold text-text-dark group-hover:text-primary-teal-text","children":"‚öôÔ∏è How It Works"}],["$","p",null,{"className":"text-sm text-text-light mt-1","children":"Discover our AI-powered product management methodology"}]]}]]}],["$","div",null,{"className":"space-y-4","children":[["$","$Lc",null,{"href":"/what-weve-learned","className":"block p-4 bg-surface rounded-card hover:bg-gray-50 transition-colors group","children":[["$","h4",null,{"className":"font-semibold text-text-dark group-hover:text-primary-teal-text","children":"üí° What We've Learned"}],["$","p",null,{"className":"text-sm text-text-light mt-1","children":"Building-in-public insights and breakthroughs"}]]}],["$","$Lc",null,{"href":"/blog","className":"block p-4 bg-surface rounded-card hover:bg-gray-50 transition-colors group","children":[["$","h4",null,{"className":"font-semibold text-text-dark group-hover:text-primary-teal-text","children":"üìù Journey"}],["$","p",null,{"className":"text-sm text-text-light mt-1","children":"Follow our building-in-public blog posts"}]]}],["$","$Lc",null,{"href":"/get-involved","className":"block p-4 bg-surface rounded-card hover:bg-gray-50 transition-colors group","children":[["$","h4",null,{"className":"font-semibold text-text-dark group-hover:text-primary-teal-text","children":"üöÄ Get Involved"}],["$","p",null,{"className":"text-sm text-text-light mt-1","children":"Join our community and stay updated"}]]}]]}]]}]]}],["$","div",null,{"className":"text-center","children":[["$","p",null,{"className":"text-text-light mb-6","children":"Still can't find what you're looking for?"}],["$","$Lc",null,{"href":"/get-involved","className":"inline-flex items-center justify-center font-semibold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:transform-none bg-primary-teal text-white hover:bg-teal-600 focus:ring-primary-teal shadow-component hover:shadow-component-hover hover:-translate-y-0.5 hover:scale-105 font-bold text-lg px-8 py-4 text-lg rounded-button","aria-label":"$undefined","children":[false,"Get Help & Stay Updated"]}]]}],["$","div",null,{"className":"mt-12 p-6 bg-gray-50 rounded-card max-w-lg mx-auto","children":["$","p",null,{"className":"text-sm text-text-light italic","children":["üí¨ ","$Ld"," \"Even the most sophisticated neural networks occasionally return null. Let's navigate back to more productive paths together!\""]}]}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],"$Le"]}]
4:["$","$1","c",{"children":[null,["$","$La",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
5:["$","$1","c",{"children":[null,["$","$La",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
6:["$","$1","c",{"children":["$Lf",null,["$","$L10",null,{"children":["$L11",["$","$L12",null,{"promise":"$@13"}]]}]]}]
7:["$","$1","h",{"children":[null,[["$","$L14",null,{"children":"$L15"}],null],["$","$L16",null,{"children":["$","div",null,{"hidden":true,"children":["$","$17",null,{"fallback":null,"children":"$L18"}]}]}]]}]
19:I[9795,["874","static/chunks/874-668c89038fa04eb8.js","212","static/chunks/212-8a7a8f47a4a53f15.js","177","static/chunks/app/layout-9ed54623e803ece8.js"],"default"]
d:["$","strong",null,{"children":"Piper Morgan says:"}]
e:["$","$L19",null,{}]
1a:I[7887,["874","static/chunks/874-668c89038fa04eb8.js","953","static/chunks/app/blog/%5Bslug%5D/page-63f1c4c60df8aece.js"],"BlogPostContent"]
1b:T4285,<section name="2ce1" class="section section--body section--first"><div class="section-divider"><hr class="section-divider"></div><div class="section-content"><div class="section-inner sectionLayout--insetColumn"><h3 name="f06a" id="f06a" class="graf graf--h3 graf--leading graf--title">When Your Tests Pass But Your App¬†Fails</h3><figure name="1ec7" id="1ec7" class="graf graf--figure graf--startsWithDoubleQuote graf-after--h3"><img class="graf-image" data-image-id="1*nFYPDGfm2RCnKNwYPz0YYw.png" data-width="1536" data-height="1024" data-is-featured="true" alt="A robot driver brags about passing the driving test but has driven its car into a wall" src="https://cdn-images-1.medium.com/max/800/1*nFYPDGfm2RCnKNwYPz0YYw.png"><figcaption class="imageCaption">‚ÄúI passed the¬†test!‚Äù</figcaption></figure><p name="bc0f" id="bc0f" class="graf graf--p graf-after--figure"><em class="markup--em markup--p-em">July 9, that evening</em></p><p name="0f20" id="0f20" class="graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p"><span class="graf-dropCap">T</span>here‚Äôs a special kind of confidence that comes from seeing all your tests pass. Green checkmarks everywhere. Coverage at 98%. The CI/CD pipeline singing its happy song.</p><p name="a0ed" id="a0ed" class="graf graf--p graf-after--p">Then you run the app and it immediately crashes.</p><p name="75a9" id="75a9" class="graf graf--p graf-after--p">Welcome to the mocking trap, where your tests are lying to you with your full permission and encouragement.</p><h3 name="2a85" id="2a85" class="graf graf--h3 graf-after--p">The setup</h3><p name="e61a" id="e61a" class="graf graf--p graf-after--h3">It was still Tuesday (why is it always a Tuesday?) and we were flying high. PM-011 was almost done. The workflow persistence layer had beautiful unit tests. Every edge case covered. Every error condition handled.</p><p name="770e" id="770e" class="graf graf--p graf-after--p">The test output was poetry:</p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="python-repl" name="b7b3" id="b7b3" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content">‚úì WorkflowRepository.create persists workflow<br />‚úì WorkflowRepository.update modifies state  <br />‚úì WorkflowRepository.find_by_id retrieves correctly<br />‚úì Error handling works for missing workflows<br />‚úì Transaction rollback on failures<br /><span class="hljs-meta prompt_">...</span> <span class="language-python"><span class="hljs-number">47</span> more passing tests ...</span></span></pre><p name="f086" id="f086" class="graf graf--p graf-after--pre">Life was good. Ship it, right?</p><p name="f43f" id="f43f" class="graf graf--p graf-after--p">Wrong.</p><h3 name="52e6" id="52e6" class="graf graf--h3 graf-after--p">The reality¬†check</h3><p name="4d49" id="4d49" class="graf graf--p graf-after--h3">First sign of trouble came during integration testing. Simple scenario: create a workflow, execute it, check the results.</p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="csharp" name="14c5" id="14c5" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content">TASK_FAILED: <span class="hljs-string">&#x27;Workflow&#x27;</span> <span class="hljs-built_in">object</span> has no attribute <span class="hljs-string">&#x27;tasks&#x27;</span></span></pre><p name="8329" id="8329" class="graf graf--p graf-after--pre">But‚Ä¶ we tested that. Test #14 specifically verified that workflows have tasks. It was right there in green.</p><p name="c6c1" id="c6c1" class="graf graf--p graf-after--p">Time to look at test #14:</p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="scss" name="92c0" id="92c0" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content">def <span class="hljs-built_in">test_workflow_has_tasks</span>():<br />    workflow = <span class="hljs-built_in">MagicMock</span>()<br />    workflow.tasks = [<span class="hljs-built_in">MagicMock</span>(), <span class="hljs-built_in">MagicMock</span>()]<br />    assert <span class="hljs-built_in">len</span>(workflow.tasks) == <span class="hljs-number">2</span>  # ‚úì Passes!</span></pre><p name="30f2" id="30f2" class="graf graf--p graf-after--pre">Oh. Oh no.</p><h3 name="3d3f" id="3d3f" class="graf graf--h3 graf-after--p">The mocking hall of¬†shame</h3><p name="388d" id="388d" class="graf graf--p graf-after--h3">As we dug deeper, the situation got worse. Our test suite was less ‚Äútesting the code‚Äù and more ‚Äútesting our ability to configure mocks.‚Äù</p><p name="e4e1" id="e4e1" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">The Greatest Hits:</strong></p><ol class="postList"><li name="9d57" id="9d57" class="graf graf--li graf-after--p"><strong class="markup--strong markup--li-strong">The Self-Fulfilling Mock</strong></li></ol><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="ini" name="6b20" id="6b20" class="graf graf--pre graf-after--li graf--preV2"><span class="pre--content"><span class="hljs-attr">mock_repo.save</span> = MagicMock(return_value=<span class="hljs-literal">True</span>) assert mock_repo.save(workflow) == <span class="hljs-literal">True</span>  <span class="hljs-comment"># Always passes!</span></span></pre><p name="4da7" id="4da7" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">2. The Mock That Mocks Itself</strong></p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="ini" name="3494" id="3494" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content"><span class="hljs-attr">workflow.execute</span> = MagicMock(side_effect=workflow.execute) <span class="hljs-comment"># Infinite recursion in production, passes in tests</span></span></pre><p name="6a58" id="6a58" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">3. The Schrodinger‚Äôs Mock</strong></p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="bash" name="5b01" id="5b01" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content"><span class="hljs-comment"># Test assumes tasks exist workflow.get_next_task = MagicMock(return_value=task) # Reality: method doesn&#x27;t exist on Workflow class</span></span></pre><h3 name="b6ff" id="b6ff" class="graf graf--h3 graf-after--pre">The two-model problem</h3><p name="1ba5" id="1ba5" class="graf graf--p graf-after--h3">But wait, it gets better. Remember that error about ‚ÄòWorkflow‚Äô having no ‚Äòtasks‚Äô attribute? Turns out we had two completely different Workflow classes:</p><ol class="postList"><li name="48dc" id="48dc" class="graf graf--li graf-after--p"><strong class="markup--strong markup--li-strong">WorkflowDefinition</strong> (from the POC)‚Ää‚Äî‚ÄäHas tasks, lives in <code class="markup--code markup--li-code">legacy/</code></li><li name="ba43" id="ba43" class="graf graf--li graf-after--li"><strong class="markup--strong markup--li-strong">Workflow</strong> (from the MVP)‚Ää‚Äî‚ÄäNo tasks attribute, lives in <code class="markup--code markup--li-code">domain/</code></li></ol><p name="d7c3" id="d7c3" class="graf graf--p graf-after--li">Our tests were mocking WorkflowDefinition behavior. Our code was using Workflow. They were about as compatible as cats and dogs at a dinner party. Close readers may notice this is hardly the first time we discovered we had built two of something. Why did this keep happening?</p><h3 name="7353" id="7353" class="graf graf--h3 graf-after--p">The archaeological dig</h3><p name="1625" id="1625" class="graf graf--p graf-after--h3">Finding this required software archaeology. Like real archaeology, but with more swearing and less cool hats.</p><p name="d8ee" id="d8ee" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Layer 1</strong> (Surface): Current tests, all passing<br><strong class="markup--strong markup--p-strong">Layer 2</strong> (two weeksago): MVP implementation, clean architecture<br><strong class="markup--strong markup--p-strong">Layer 3</strong> (three weeks ago): POC code, ‚Äútemporary‚Äù solutions<br><strong class="markup--strong markup--p-strong">Layer 4</strong> (Bedrock): GitHub integration still importing from Layer 3</p><p name="e371" id="e371" class="graf graf--p graf-after--p">The POC was supposed to be thrown away. Instead, it was load-bearing.</p><h3 name="2758" id="2758" class="graf graf--h3 graf-after--p">The humbling</h3><p name="b6c7" id="b6c7" class="graf graf--p graf-after--h3">Here‚Äôs what hurt the most: we knew better. We‚Äôd read all the articles. (Well, they‚Äôve read all the articles‚Ää‚Äî‚Ääa lot of this is super new to me). ‚ÄúDon‚Äôt over-mock.‚Äù ‚ÄúTest behavior, not implementation.‚Äù ‚ÄúIntegration tests matter.‚Äù</p><p name="2588" id="2588" class="graf graf--p graf-after--p">But when deadlines loom and features need shipping, it‚Äôs so easy to mock your way to green checkmarks.</p><p name="0b61" id="0b61" class="graf graf--p graf-after--p">Our mocking strategy had evolved like this:</p><ol class="postList"><li name="c4d4" id="c4d4" class="graf graf--li graf-after--p">Write good integration test</li><li name="dab2" id="dab2" class="graf graf--li graf-after--li">Test is slow, makes CI unhappy</li><li name="c6f4" id="c6f4" class="graf graf--li graf-after--li">Add some mocks to speed it up</li><li name="79b1" id="79b1" class="graf graf--li graf-after--li">Test breaks when refactoring</li><li name="1d36" id="1d36" class="graf graf--li graf-after--li">Mock more things to make it pass</li><li name="6c17" id="6c17" class="graf graf--li graf-after--li">Repeat until test tests nothing</li></ol><h3 name="562d" id="562d" class="graf graf--h3 graf-after--li">The fix (and the¬†lesson)</h3><p name="ee65" id="ee65" class="graf graf--p graf-after--h3">The solution was painful but necessary:</p><p name="2a95" id="2a95" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 1</strong>: Accept reality. The mocks had to go.</p><p name="b1af" id="b1af" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 2</strong>: Write ONE real integration test:</p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="ruby" name="be04" id="be04" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content"><span class="hljs-keyword">def</span> <span class="hljs-title function_">test_workflow_actually_works</span>():<br />    <span class="hljs-comment"># Real repository, real database, real pain</span><br />    workflow = create_workflow(<span class="hljs-string">&quot;test&quot;</span>)<br />    workflow.add_task(...)  <span class="hljs-comment"># This failed immediately</span><br />    <span class="hljs-comment"># Good! Failing for the right reason!</span></span></pre><p name="f856" id="f856" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Step 3</strong>: Fix the actual code, not the tests.</p><p name="e4c0" id="e4c0" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 4</strong>: Keep some unit tests, but test real behavior:</p><pre data-code-block-mode="1" spellcheck="false" data-code-block-lang="csharp" name="8c72" id="8c72" class="graf graf--pre graf-after--p graf--preV2"><span class="pre--content"><span class="hljs-function">def <span class="hljs-title">test_domain_logic</span>():<br />    # Real <span class="hljs-built_in">object</span>, <span class="hljs-keyword">not</span> mocks<br />    workflow</span> = Workflow(...)<br />    <span class="hljs-meta"># Test business rules, not framework plumbing</span></span></pre><h3 name="666f" id="666f" class="graf graf--h3 graf-after--pre">The deeper¬†pattern</h3><p name="9b10" id="9b10" class="graf graf--p graf-after--h3">This wasn‚Äôt just about bad tests. It was about the stories we tell ourselves:</p><ul class="postList"><li name="d856" id="d856" class="graf graf--li graf--startsWithDoubleQuote graf-after--p">‚ÄúWe‚Äôll refactor the POC later‚Äù (We won‚Äôt)</li><li name="7a28" id="7a28" class="graf graf--li graf--startsWithDoubleQuote graf-after--li">‚ÄúMocks make tests faster‚Äù (And less useful)</li><li name="a25d" id="a25d" class="graf graf--li graf--startsWithDoubleQuote graf-after--li">‚Äú100% coverage means it works‚Äù (It means it‚Äôs covered)</li><li name="31b7" id="31b7" class="graf graf--li graf--startsWithDoubleQuote graf-after--li">‚ÄúIntegration tests are slow‚Äù (Debugging production is slower)</li></ul><h3 name="b297" id="b297" class="graf graf--h3 graf-after--li">The test pyramid,¬†revised</h3><p name="a681" id="a681" class="graf graf--p graf-after--h3">The test pyramid says: lots of unit tests, some integration tests, few E2E tests.</p><p name="c7f1" id="c7f1" class="graf graf--p graf-after--p">Our test pyramid looked more like a test hourglass: lots of mocked unit tests, no integration tests, lots of manual testing in production.</p><p name="514c" id="514c" class="graf graf--p graf-after--p">Here‚Äôs our new approach:</p><ol class="postList"><li name="dddc" id="dddc" class="graf graf--li graf-after--p"><strong class="markup--strong markup--li-strong">Domain tests</strong> (no mocks): Test business logic with real objects</li><li name="dbde" id="dbde" class="graf graf--li graf-after--li"><strong class="markup--strong markup--li-strong">Integration tests</strong> (minimal mocks): Test component interactions</li><li name="0c89" id="0c89" class="graf graf--li graf-after--li"><strong class="markup--strong markup--li-strong">E2E tests</strong> (no mocks): Test critical user paths</li><li name="fae7" id="fae7" class="graf graf--li graf-after--li"><strong class="markup--strong markup--li-strong">Unit tests</strong> (careful mocks): Only for isolated algorithms</li></ol><h3 name="abdf" id="abdf" class="graf graf--h3 graf-after--li">What worked</h3><p name="5517" id="5517" class="graf graf--p graf-after--h3">Once we stopped lying to ourselves with mocks:</p><ul class="postList"><li name="6809" id="6809" class="graf graf--li graf-after--p">Bugs found in development, not production</li><li name="288a" id="288a" class="graf graf--li graf-after--li">Refactoring became possible (tests failed when things broke)</li><li name="17d5" id="17d5" class="graf graf--li graf-after--li">New developers understood what the code actually did</li><li name="5345" id="5345" class="graf graf--li graf-after--li">CI was slower but deployments were faster (less debugging)</li></ul><h3 name="1d6d" id="1d6d" class="graf graf--h3 graf-after--li">For fellow mock¬†addicts</h3><p name="eeba" id="eeba" class="graf graf--p graf-after--h3">If your tests are all green but your app is on fire, ask yourself:</p><ol class="postList"><li name="8990" id="8990" class="graf graf--li graf-after--p">What are you actually testing‚Ää‚Äî‚Ääyour code or your mocks?</li><li name="8e0c" id="8e0c" class="graf graf--li graf-after--li">If you deleted the implementation, would tests still pass?</li><li name="45c7" id="45c7" class="graf graf--li graf-after--li">Do your tests use the same objects as production?</li><li name="8d69" id="8d69" class="graf graf--li graf-after--li">Can a new developer understand what works from the tests?</li><li name="f7c3" id="f7c3" class="graf graf--li graf-after--li">When did you last run the actual app?</li></ol><h3 name="c866" id="c866" class="graf graf--h3 graf-after--li">The recovery</h3><p name="0e04" id="0e04" class="graf graf--p graf-after--h3">It took a solid day to fix our test suite. We went from 147 passing tests to 43. But those 43 tests actually tested something.</p><p name="294f" id="294f" class="graf graf--p graf-after--p">More importantly, when they passed, the app worked.</p><p name="4c1c" id="4c1c" class="graf graf--p graf-after--p">Green checkmarks that mean something. What a concept.</p><p name="b519" id="b519" class="graf graf--p graf-after--p">When I first heard that test-driven development is a good way to keep robo-coders on track I was excited. Then I heard they sometimes change the tests to make them pass, and now I realize that what you test is at least as important as the fact that you are testing.</p><h3 name="b1e2" id="b1e2" class="graf graf--h3 graf-after--p">The punchline</h3><p name="5078" id="5078" class="graf graf--p graf-after--h3">The best part? After fixing all the tests and removing the mocks, we found the original bug in five minutes. The Workflow class was missing a <code class="markup--code markup--p-code">to_dict()</code> method that the persistence layer expected.</p><p name="2a59" id="2a59" class="graf graf--p graf-after--p">One method. Five lines of code. Hidden by 147 ‚Äúpassing‚Äù tests.</p><p name="56cb" id="56cb" class="graf graf--p graf-after--p">Sometimes the best test framework is console.log and hope.</p><p name="0fa0" id="0fa0" class="graf graf--p graf-after--p graf--trailing">(Just kidding. But only barely.)</p></div></div>f:["$","$L1a",null,{"post":{"title":"When Your Tests Pass But Your App Fails","excerpt":"","url":"/blog/when-your-tests-pass-but-your-app-fails","publishedAt":"Invalid Date","publishedAtISO":"","author":"christian crumlish","readingTime":"5 min read","tags":["Building in Public"],"guid":"https://medium.com/building-piper-morgan/3b3d6f3aeff1","featuredImage":"/assets/blog-images/3b3d6f3aeff1-featured.webp","slug":"when-your-tests-pass-but-your-app-fails","category":"building","workDate":"Jul 9, 2025","workDateISO":"2025-07-09T00:00:00.000Z","cluster":"production-transformation","chatDate":"7/9/2025"},"content":{"title":"When Your Tests Pass But Your App Fails","subtitle":"July 9, that evening","content":"$1b","author":"christian crumlish","canonicalLink":"","publishedDate":"2025-08-08T14:16:04.863Z","filename":"2025-08-08_When-Your-Tests-Pass-But-Your-App-Fails-3b3d6f3aeff1.html"}}]
15:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
11:null
1c:I[8175,[],"IconMark"]
13:{"metadata":[["$","title","0",{"children":"When Your Tests Pass But Your App Fails | Piper Morgan"}],["$","meta","1",{"name":"description","content":"July 9, that evening"}],["$","meta","2",{"name":"author","content":"Christian Crumlish"}],["$","meta","3",{"name":"keywords","content":"AI,Product Management,Methodology,Building in Public"}],["$","meta","4",{"name":"creator","content":"Christian Crumlish"}],["$","meta","5",{"name":"publisher","content":"Christian Crumlish"}],["$","meta","6",{"name":"robots","content":"index, follow"}],["$","meta","7",{"name":"googlebot","content":"index, follow"}],["$","link","8",{"rel":"canonical","href":"https://pipermorgan.ai/"}],["$","meta","9",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","10",{"property":"og:title","content":"When Your Tests Pass But Your App Fails"}],["$","meta","11",{"property":"og:description","content":"July 9, that evening"}],["$","meta","12",{"property":"og:type","content":"article"}],["$","meta","13",{"property":"article:author","content":"christian crumlish"}],["$","meta","14",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","15",{"name":"twitter:title","content":"When Your Tests Pass But Your App Fails"}],["$","meta","16",{"name":"twitter:description","content":"July 9, that evening"}],["$","link","17",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"32x33"}],["$","link","18",{"rel":"icon","href":"/favicon.ico","sizes":"32x32","type":"image/x-icon"}],["$","link","19",{"rel":"icon","href":"/pm-favicon-16.png","sizes":"16x16","type":"image/png"}],["$","link","20",{"rel":"icon","href":"/pm-favicon-32.png","sizes":"32x32","type":"image/png"}],["$","link","21",{"rel":"icon","href":"/pm-favicon-48.png","sizes":"48x48","type":"image/png"}],["$","link","22",{"rel":"apple-touch-icon","href":"/pm-favicon-180.png","sizes":"180x180","type":"image/png"}],["$","link","23",{"rel":"icon","href":"/pm-favicon-192.png","sizes":"192x192","type":"image/png"}],["$","$L1c","24",{}]],"error":null,"digest":"$undefined"}
18:"$13:metadata"
